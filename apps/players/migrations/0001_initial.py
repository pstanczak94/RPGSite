# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-03-04 19:30
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('guilds', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('sex', models.PositiveSmallIntegerField(choices=[(1, 'Male'), (2, 'Female')], default=1)),
                ('vocation', models.PositiveSmallIntegerField(choices=[(1, 'Knight'), (2, 'Paladin'), (3, 'Sorcerer'), (4, 'Druid')], default=1)),
                ('town', models.PositiveSmallIntegerField(choices=[(1, 'RPGLand')], default=1)),
                ('promotion', models.BooleanField(default=False)),
                ('experience', models.BigIntegerField(default=0)),
                ('level', models.PositiveIntegerField(default=1)),
                ('magic_level', models.PositiveSmallIntegerField(default=0)),
                ('health', models.PositiveIntegerField(default=150)),
                ('health_max', models.PositiveIntegerField(default=150)),
                ('mana', models.PositiveIntegerField(default=0)),
                ('mana_max', models.PositiveIntegerField(default=0)),
                ('mana_spent', models.PositiveIntegerField(default=0)),
                ('soul', models.PositiveSmallIntegerField(default=0)),
                ('direction', models.PositiveSmallIntegerField(default=2)),
                ('look_body', models.PositiveSmallIntegerField(default=0)),
                ('look_feet', models.PositiveSmallIntegerField(default=0)),
                ('look_head', models.PositiveSmallIntegerField(default=0)),
                ('look_legs', models.PositiveSmallIntegerField(default=0)),
                ('look_type', models.PositiveSmallIntegerField(default=136)),
                ('pos_x', models.PositiveIntegerField(default=0)),
                ('pos_y', models.PositiveIntegerField(default=0)),
                ('pos_z', models.PositiveSmallIntegerField(default=0)),
                ('capacity', models.PositiveIntegerField(default=0)),
                ('last_logout', models.DateTimeField(blank=True, default=None, null=True)),
                ('last_ip', models.GenericIPAddressField(blank=True, default=None, null=True)),
                ('save_on_logout', models.BooleanField(default=True)),
                ('conditions', models.BinaryField(default=b'')),
                ('stamina', models.DurationField(default=datetime.timedelta(1, 43200))),
                ('skull', models.BooleanField(default=False)),
                ('skull_time', models.DurationField(blank=True, default=None, null=True)),
                ('loss_experience', models.PositiveIntegerField(default=100)),
                ('loss_mana', models.PositiveIntegerField(default=100)),
                ('loss_skills', models.PositiveIntegerField(default=100)),
                ('loss_items', models.PositiveIntegerField(default=100)),
                ('balance', models.PositiveIntegerField(default=0)),
                ('premium_end', models.DateTimeField(blank=True, default=None, null=True)),
                ('guild_nick', models.CharField(blank=True, default='', max_length=30)),
                ('in_game', models.BooleanField(default=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'player',
                'verbose_name_plural': 'players',
                'db_table': 'players',
            },
        ),
        migrations.CreateModel(
            name='PlayerDepotItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('depot_id', models.PositiveSmallIntegerField(default=0)),
                ('s_id', models.IntegerField()),
                ('p_id', models.IntegerField(default=0)),
                ('item_type', models.IntegerField()),
                ('count', models.IntegerField(default=0)),
                ('attributes', models.BinaryField(default=b'')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.Player')),
            ],
            options={
                'verbose_name': 'depot item',
                'verbose_name_plural': 'depot items',
                'db_table': 'player_depotitems',
            },
        ),
        migrations.CreateModel(
            name='PlayerGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('access', models.PositiveIntegerField(default=0)),
                ('flags', models.IntegerField(default=0)),
                ('max_depot_items', models.PositiveSmallIntegerField(default=1000)),
                ('max_vip_list', models.PositiveSmallIntegerField(default=50)),
            ],
            options={
                'verbose_name': 'group',
                'verbose_name_plural': 'groups',
                'db_table': 'player_groups',
            },
        ),
        migrations.CreateModel(
            name='PlayerItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('s_id', models.IntegerField()),
                ('p_id', models.IntegerField(default=0)),
                ('item_type', models.PositiveIntegerField()),
                ('count', models.PositiveSmallIntegerField(default=0)),
                ('attributes', models.BinaryField(default=b'')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.Player')),
            ],
            options={
                'verbose_name': 'item',
                'verbose_name_plural': 'items',
                'db_table': 'player_items',
            },
        ),
        migrations.CreateModel(
            name='PlayerSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_id', models.PositiveSmallIntegerField()),
                ('value', models.PositiveIntegerField(default=0)),
                ('count', models.PositiveIntegerField(default=0)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.Player')),
            ],
            options={
                'verbose_name': 'skill',
                'verbose_name_plural': 'skills',
                'db_table': 'player_skills',
            },
        ),
        migrations.CreateModel(
            name='PlayerSpell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('words', models.CharField(max_length=30)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.Player')),
            ],
            options={
                'verbose_name': 'spell',
                'verbose_name_plural': 'spells',
                'db_table': 'player_spells',
            },
        ),
        migrations.CreateModel(
            name='PlayerStorage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.PositiveSmallIntegerField()),
                ('value', models.IntegerField()),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.Player')),
            ],
            options={
                'verbose_name': 'storage',
                'verbose_name_plural': 'storages',
                'db_table': 'player_storage',
            },
        ),
        migrations.AddField(
            model_name='player',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='players.PlayerGroup'),
        ),
        migrations.AddField(
            model_name='player',
            name='guild',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='guilds.Guild'),
        ),
        migrations.AddField(
            model_name='player',
            name='guild_rank',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='guilds.GuildRank'),
        ),
        migrations.AddField(
            model_name='player',
            name='vips',
            field=models.ManyToManyField(to='players.Player'),
        ),
        migrations.AlterUniqueTogether(
            name='playerstorage',
            unique_together=set([('player', 'key')]),
        ),
        migrations.AlterUniqueTogether(
            name='playerspell',
            unique_together=set([('player', 'words')]),
        ),
        migrations.AlterUniqueTogether(
            name='playerskill',
            unique_together=set([('player', 'skill_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='playeritem',
            unique_together=set([('player', 's_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='playerdepotitem',
            unique_together=set([('player', 's_id')]),
        ),
    ]
