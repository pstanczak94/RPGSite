# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-03-06 20:19
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(error_messages={'unique': 'An account with that name already exists.'}, help_text='Account name needs to be from 3 to 30 characters length.\nAllowed characters are: a-z, A-Z, 0-9.', max_length=32, unique=True, validators=[django.core.validators.RegexValidator(message='Account name may contain only english letters and digits.', regex='^[a-zA-Z0-9]+$'), django.core.validators.MinLengthValidator(3), django.core.validators.MaxLengthValidator(30)], verbose_name='name')),
                ('password', models.CharField(help_text="Password needs to be from 6 to 50 characters length.\nIt can't be too common or contain only numbers.", max_length=40, verbose_name='password')),
                ('email', models.EmailField(help_text='This email address will be used for account recovery.', max_length=255, verbose_name='email address')),
                ('creation', models.IntegerField(default=0)),
                ('access', models.IntegerField(choices=[(1, 'Normal'), (2, 'Tutor'), (3, 'Senior Tutor'), (4, 'Gamemaster'), (5, 'God')], db_column='type', default=1, help_text='This field describes the access level of an account.', verbose_name='access level')),
                ('secret', models.CharField(blank=True, help_text='Secret token used by a game server to authenticate accounts.', max_length=16, null=True, verbose_name='secret auth token')),
                ('premdays', models.IntegerField(default=0, help_text='Number of premium days left.', verbose_name='premium days')),
                ('lastday', models.PositiveIntegerField(default=0, help_text='This field is a helper for premium days calculations.', verbose_name='last premium day')),
            ],
            options={
                'db_table': 'accounts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountBanHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=255)),
                ('banned_at', models.BigIntegerField()),
                ('expired_at', models.BigIntegerField()),
            ],
            options={
                'db_table': 'account_ban_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountVipList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(default='', max_length=128)),
                ('icon', models.IntegerField(default=0)),
                ('notify', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'account_viplist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountBans',
            fields=[
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='accounts.Account')),
                ('reason', models.CharField(max_length=255)),
                ('banned_at', models.BigIntegerField()),
                ('expires_at', models.BigIntegerField()),
            ],
            options={
                'db_table': 'account_bans',
                'managed': False,
            },
        ),
    ]
